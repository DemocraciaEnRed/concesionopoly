*
  box-sizing: border-box

body,
html
  margin: 0
  padding: 0

body
  background-color: #d6d6d6

.concesionopoly
  z-index: 0
  position: relative
  padding: .5em
  min-width: 100vw
  min-height: 100vh
  font-family: 'Lato', sans-serif
  font-weight: 300

.concesionopoly .btn
  display: inline-block
  margin: .5em 0 0
  padding: .5em 1.2em .6em
  width: auto
  border: 0
  border-radious: 0
  cursoir: pointer
  line-height: default
  vertical-align: middle
  white-space: normal
  font-family: 'Lato', sans-serif
  font-weight: 300
  font-size: 16px
  background: none
  transition: all .05s
  box-shadow: 3px 3px 0 rgba(#979797, .5)

  &:active
    transform: translate(3px, 3px)
    box-shadow: 0 0 0 -1px rgba(#979797, .5)

  &:focus
    outline: 0

  &.wide
    display: block
    width: 100%

  &.yellow
    color: #fff
    background-color: #FFB951


.concesionopoly .modals
  position: absolute
  left: 0
  top: 0
  width: 100%
  height: 100%

  &.active
    .overlay
      opacity: .8

    .modal
      opacity: 1

  .overlay
    z-index: 5
    position: absolute
    left: 0
    top: 0
    width: 100%
    height: 100%
    background-color: rgba(#a0a0a0, .7)
    background-image: linear-gradient(to bottom right, #555, #000);
    opacity: 0
    transition: opacity .5s

  .modal
    z-index: 10
    position: absolute
    left: 50%
    top: 50%
    font-size: 16px
    padding: .8em
    width: 350px
    max-width: calc(100% - 20px)
    background-color: #fff
    transform: translate(-50%, -50%)
    opacity: 0
    transition: opacity .6s
    box-shadow: 4px 4px 0 #979797

    h1
      margin: 0 0 .625em
      padding: .3em 1.5em;
      text-align: center
      color: #fff
      font-size: .8em
      font-weight: 300
      text-transform: uppercase
      background-color: #0089AE

    p
      margin: 0 0 .625em
      font-size: 1em
      text-align: center
      font-weight: 300

.concesionopoly .board
  position: relative
  width: 671px
  margin: 0 auto
  max-width: 100%
  max-height: 100%
  background-image: url('img/concesionopoly/tablero.svg')
  background-repeat: no-repeat
  background-position: center center
  background-size: 100% 100%
  box-shadow: 4px 4px 0 #979797,
              inset 0 0 20px -5px rgba(#fff, .6)

  tile-width = 9.4125%
  tile-height = 12.35%
  chip-width = 12%
  chip-height = chip-width * .75

  .spacer
    padding-top: 100%

  .tile
    position: absolute

    &:hover
      background-color: rgba(magenta, .1)

    &.on-top,
    &.on-bottom
      width: tile-width
      height: tile-height

    &.on-right,
    &.on-left
      width: tile-height
      height: tile-width

    &.on-corner
      width: tile-height
      height: tile-height

    &.on-right
      right: 0

    &.on-bottom
      bottom: 0

    &.on-left
      left: 0

    &.on-top
      top: 0

    for num in (1..8)
      &[data-tile={s('"%s"', num)}]
        right: round(tile-height + tile-width * (num - 1), 4)

    for num in (9..16)
      &[data-tile={s('"%s"', num)}]
        bottom: round(tile-height + tile-width * (num - 9), 4)

    for num in (17..24)
      &[data-tile={s('"%s"', num)}]
        left: round(tile-height + tile-width * (num - 17), 4)

    for num in (25..32)
      &[data-tile={s('"%s"', num)}]
        top: round(tile-height + tile-width * (num - 25), 4)

  .chip
    position: absolute
    margin: 0
    width: chip-width
    height: chip-height
    background: url('img/concesionopoly/chip.png') no-repeat center center
    background-size: auto 100%
    transition: all 1s
    right: 0
    bottom: 0

    initial-right = tile-height + ( tile-width - chip-width ) / 2
    initial-bottom = tile-height + 1 + ( tile-width - chip-width ) / 2
    from-border = round(( tile-height - chip-height ) / 2, 4)
    board-width = 100% - tile-height

    &[data-position="0"]
      margin-right: from-border
      margin-bottom: from-border

    for num in (1..8)
      &[data-position={s('"%s"', num)}]
        margin-right: round(initial-right + tile-width * (num - 1), 4)
        margin-bottom: from-border

    for num in (9..16)
      &[data-position={s('"%s"', num)}]
        margin-right: board-width
        margin-bottom: round(initial-bottom + tile-width * (num - 9), 4)

    for num in (17..24)
      &[data-position={s('"%s"', num)}]
        margin-right: round(initial-right + tile-width * (24 - num), 4)
        margin-bottom: board-width + 1%

    for num in (25..32)
      &[data-position={s('"%s"', num)}]
        margin: 0
        margin-right: from-border
        margin-bottom: round(initial-bottom + tile-width * (32 - num), 4)
